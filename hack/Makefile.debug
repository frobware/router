# -*- mode: makefile -*-

export GOOS=linux

REGISTRY ?= quay.io
IMAGE ?= amcdermo/openshift-router-ocpbugs40850-dev
# IMAGE = amcdermo/openshift-router-ocpbugs40850@sha256:211cd8ed68a01405c722575c209eb7d3f565f6ec92b714f2158a8f63de47513f

#TAG ?= PR626SEP23
#TAG = @sha256:211cd8ed68a01405c722575c209eb7d3f565f6ec92b714f2158a8f63de47513f
# TAG =

# podman pull quay.io/amcdermo/openshift-router-ocpbugs40850@sha256:211cd8ed68a01405c722575c209eb7d3f565f6ec92b714f2158a8f63de47513f

new-openshift-router-image:
	GO111MODULE=on CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o openshift-router -gcflags=all="-N -l" ./cmd/openshift-router
	podman build -t $(IMAGE):$(TAG) -f hack/Dockerfile.debug .

push:
	podman tag $(IMAGE):$(TAG) $(REGISTRY)/$(IMAGE):$(TAG)
	podman push $(REGISTRY)/$(IMAGE):$(TAG)

set-image:
	oc scale --replicas 0 -n openshift-cluster-version deployments/cluster-version-operator
	oc scale --replicas 0 -n openshift-ingress-operator deployments ingress-operator
	oc -n openshift-ingress scale deployment --replicas=0 router-default
	oc -n openshift-ingress patch deployment router-default -p '{"spec":{"template":{"spec":{"$$setElementOrder/containers":[{"name":"router"}],"containers":[{"imagePullPolicy":"Always","name":"router"}]}}}}'
	oc -n openshift-ingress set image deployment/router-default router=$(REGISTRY)/$(IMAGE):$(TAG)
	oc -n openshift-ingress scale deployment --replicas=1 router-default

dwim:  new-openshift-router-image push set-image

reset:
	oc scale --replicas 1 -n openshift-cluster-version deployments/cluster-version-operator
	oc scale --replicas 1 -n openshift-ingress-operator deployments ingress-operator
