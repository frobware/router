# -*- mode: makefile -*-

export GOOS=linux

REGISTRY ?= registry.int.frobware.com
IMAGE ?= aim/openshift-router
TAG ?= latest
IMAGEBUILDER ?= podman

build:
	GO111MODULE=on CGO_ENABLED=0 GOFLAGS=-mod=vendor go build -o openshift-router -gcflags=all="-N -l" ./cmd/openshift-router

new-openshift-router-image: build
	$(IMAGEBUILDER) build -t $(IMAGE):$(TAG) -f hack/Dockerfile.remote-dev .

push:
	$(IMAGEBUILDER) tag $(IMAGE):$(TAG) $(REGISTRY)/$(IMAGE):$(TAG)
	$(IMAGEBUILDER) push $(REGISTRY)/$(IMAGE):$(TAG)

set-image:
	oc scale --replicas 0 -n openshift-cluster-version deployments/cluster-version-operator
	oc scale --replicas 0 -n openshift-ingress-operator deployments ingress-operator
	oc -n openshift-ingress scale deployment --replicas=0 router-default
	oc -n openshift-ingress patch deployment router-default -p '{"spec":{"template":{"spec":{"$$setElementOrder/containers":[{"name":"router"}],"containers":[{"imagePullPolicy":"Always","name":"router"}]}}}}'
	oc -n openshift-ingress set image deployment/router-default router=$(REGISTRY)/$(IMAGE):$(TAG)
	oc -n openshift-ingress scale deployment --replicas=1 router-default

dwim:  new-openshift-router-image push set-image

reset:
	oc scale --replicas 1 -n openshift-cluster-version deployments/cluster-version-operator
	oc scale --replicas 1 -n openshift-ingress-operator deployments ingress-operator

ROUTER_POD = $(shell oc get pods -n openshift-ingress -o=jsonpath='{.items[*].metadata.name}' | head -n1)

remote-debug-port-forward:
	oc port-forward -n openshift-ingress deployment/router-default --address 127.0.0.1 7000:7000

remote-debug-openshift-router: build
	oc -n openshift-ingress cp -c router ./openshift-router $(ROUTER_POD):/usr/bin/openshift-router
	oc -n openshift-ingress rsh -t $(ROUTER_POD) dlv --listen=:7000 --api-version=2 --headless=true --accept-multiclient exec --continue /usr/bin/openshift-router -- --stats-port=1938 2>&1 | tee /proc/1/fd/1

remote-debug-openshift-router-via-ssh: build
	scp ./openshift-router container:/usr/bin/openshift-router
	ssh -t root@container dlv --listen=:7000 --api-version=2 --headless=true --accept-multiclient exec /usr/bin/openshift-router -- --stats-port=1938

verify:
	@echo ROUTER_POD=$(ROUTER_POD)

dup-pod-env:
	@echo "Extracting pod environment variables..."
	oc exec $(ROUTER_POD) -- env > pod_env.txt
	scp pod_env.txt root@container:/root
	ssh root@container 'echo "set -a" >> ~/.bashrc && echo "source /root/pod_env.txt" >> ~/.bashrc'

start-sshd:
	oc exec $(ROUTER_POD) -- /usr/sbin/sshd
