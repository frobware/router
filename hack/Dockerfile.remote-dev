FROM fedora:38
RUN yum update -y
RUN yum install -y https://github.com/frobware/haproxy-builds/raw/master/rhaos-4.16-rhel-9/haproxy28-2.8.5-1.rhaos4.16.el9.x86_64.rpm
RUN haproxy -vv
RUN dnf groupinstall -y "Development Tools"
RUN INSTALL_PKGS="rsyslog procps-ng util-linux socat lsof strace fuse-sshfs which rsync git wget golang tini openssh-server" && \
    yum install -y $INSTALL_PKGS && \
    rpm -V $INSTALL_PKGS && \
    yum clean all && \
    mkdir -p /var/lib/haproxy/router/{certs,cacerts,whitelists} && \
    mkdir -p /var/lib/haproxy/{conf/.tmp,run,bin,log} && \
    touch /var/lib/haproxy/conf/{{os_http_be,os_edge_reencrypt_be,os_tcp_be,os_sni_passthrough,os_route_http_redirect,cert_config,os_wildcard_domain}.map,haproxy.config} && \
    setcap 'cap_net_bind_service=ep' /usr/sbin/haproxy && \
    chown -R :0 /var/lib/haproxy && \
    chmod -R g+w /var/lib/haproxy

# % export JETBRAINS_CLIENT_JDK=/nix/store/2av4k7bwr1j7g9lr8f018m5l17ac1jny-jetbrains-jdk-jcef-17.0.8-b1000.8/lib/openjdk

      # volumes:
      # - name: nfs-storage
      #   persistentVolumeClaim:
      #     claimName: nfs-pvc

        # volumeMounts:
        # - mountPath: /etc/rsyslog
        #   name: rsyslog-config
        # - mountPath: /var/lib/rsyslog
        #   name: rsyslog-socket

        # - mountPath: /src
        #   name: nfs-storage

        # securityContext:
        #   allowPrivilegeEscalation: true
        #   capabilities:
        #     add:
        #     - SYS_ADMIN
        #     - SYS_CHROOT
        #     - AUDIT_WRITE
        #     - AUDIT_CONTROL

RUN touch /var/log/wtmp && touch /var/log/lastlog && touch /var/run/utmp

# Configure SSH
RUN mkdir /var/run/sshd && \
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config && \
    echo 'PasswordAuthentication yes' >> /etc/ssh/sshd_config && \
    echo 'Port 2222' >> /etc/ssh/sshd_config

RUN ssh-keygen -Av
RUN mkdir -p /src
RUN useradd -ms /bin/bash user && echo 'user:user' | chpasswd

# Create .ssh directory for the user with appropriate permissions.
RUN mkdir -p /home/user/.ssh && \
    chown user:user /home/user/.ssh && \
    chmod 700 /home/user/.ssh

RUN mkdir -p /home/user/aim && chown user:user /home/user/aim

# Fetch authorized_keys from the specified URL and set appropriate
# permissions.
RUN curl -s https://github.com/frobware.keys -o /home/user/.ssh/authorized_keys && \
    chown user:user /home/user/.ssh/authorized_keys && \
    chmod 600 /home/user/.ssh/authorized_keys

# Ensure the root user can log in via SSH
RUN mkdir -p /root/.ssh && \
    curl -s https://github.com/frobware.keys -o /root/.ssh/authorized_keys && \
    chmod 600 /root/.ssh/authorized_keys

COPY images/router/haproxy/ /var/lib/haproxy/
COPY openshift-router /usr/bin/openshift-router
COPY dlv /usr/bin/dlv
COPY start-router.sh /usr/bin/start-router.sh
COPY entrypoint.sh /usr/bin/entrypoint.sh
COPY entrypoint /usr/bin/entrypoint
USER 1001
EXPOSE 80 443 7000
WORKDIR /var/lib/haproxy/conf
ENV XDG_CONFIG_HOME=/tmp \
    TEMPLATE_FILE=/var/lib/haproxy/conf/haproxy-config.template \
    RELOAD_SCRIPT=/var/lib/haproxy/reload-haproxy
ENTRYPOINT ["/usr/bin/tini", "-v", "-s", "--", "/usr/bin/entrypoint"]

#ENTRYPOINT ["/usr/bin/dlv", "exec", "--log", "--api-version=2", "--headless", "--accept-multiclient", "--continue", "--listen=:7000", "/usr/bin/openshift-router", "--", "--v=2"]
